// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	shortlinks "github.com/GrishaSkurikhin/OzonTestTask/internal/service/shortlinks"
)

// ServiceURLSaver is an autogenerated mock type for the ServiceURLSaver type
type ServiceURLSaver struct {
	mock.Mock
}

// SaveURL provides a mock function with given fields: ctx, longURL, host, saver
func (_m *ServiceURLSaver) SaveURL(ctx context.Context, longURL string, host string, saver shortlinks.URLSaver) (string, error) {
	ret := _m.Called(ctx, longURL, host, saver)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, shortlinks.URLSaver) (string, error)); ok {
		return rf(ctx, longURL, host, saver)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string, shortlinks.URLSaver) string); ok {
		r0 = rf(ctx, longURL, host, saver)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string, shortlinks.URLSaver) error); ok {
		r1 = rf(ctx, longURL, host, saver)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewServiceURLSaver interface {
	mock.TestingT
	Cleanup(func())
}

// NewServiceURLSaver creates a new instance of ServiceURLSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewServiceURLSaver(t mockConstructorTestingTNewServiceURLSaver) *ServiceURLSaver {
	mock := &ServiceURLSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
